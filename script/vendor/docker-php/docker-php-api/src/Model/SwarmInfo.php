<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API\Model;

class SwarmInfo
{
    /**
     * Unique identifier of for this node in the swarm.
     *
     * @var string
     */
    protected $nodeID;
    /**
     * IP address at which this node can be reached by other nodes in the.
    swarm.

     *
     * @var string
     */
    protected $nodeAddr;
    /**
     * Current local status of this node.
     *
     * @var string
     */
    protected $localNodeState;
    /**
     * @var bool
     */
    protected $controlAvailable;
    /**
     * @var string
     */
    protected $error;
    /**
     * List of ID's and addresses of other managers in the swarm.
     *
     * @var PeerNode[]
     */
    protected $remoteManagers;
    /**
     * Total number of nodes in the swarm.
     *
     * @var int
     */
    protected $nodes;
    /**
     * Total number of managers in the swarm.
     *
     * @var int
     */
    protected $managers;
    /**
     * ClusterInfo represents information about the swarm as is returned by the.
    "/info" endpoint. Join-tokens are not included.

     *
     * @var ClusterInfo
     */
    protected $cluster;

    /**
     * Unique identifier of for this node in the swarm.
     *
     * @return string
     */
    public function getNodeID(): ?string
    {
        return $this->nodeID;
    }

    /**
     * Unique identifier of for this node in the swarm.
     *
     * @param string $nodeID
     *
     * @return self
     */
    public function setNodeID(?string $nodeID): self
    {
        $this->nodeID = $nodeID;

        return $this;
    }

    /**
     * IP address at which this node can be reached by other nodes in the.
    swarm.

     *
     * @return string
     */
    public function getNodeAddr(): ?string
    {
        return $this->nodeAddr;
    }

    /**
     * IP address at which this node can be reached by other nodes in the.
    swarm.

     *
     * @param string $nodeAddr
     *
     * @return self
     */
    public function setNodeAddr(?string $nodeAddr): self
    {
        $this->nodeAddr = $nodeAddr;

        return $this;
    }

    /**
     * Current local status of this node.
     *
     * @return string
     */
    public function getLocalNodeState(): ?string
    {
        return $this->localNodeState;
    }

    /**
     * Current local status of this node.
     *
     * @param string $localNodeState
     *
     * @return self
     */
    public function setLocalNodeState(?string $localNodeState): self
    {
        $this->localNodeState = $localNodeState;

        return $this;
    }

    /**
     * @return bool
     */
    public function getControlAvailable(): ?bool
    {
        return $this->controlAvailable;
    }

    /**
     * @param bool $controlAvailable
     *
     * @return self
     */
    public function setControlAvailable(?bool $controlAvailable): self
    {
        $this->controlAvailable = $controlAvailable;

        return $this;
    }

    /**
     * @return string
     */
    public function getError(): ?string
    {
        return $this->error;
    }

    /**
     * @param string $error
     *
     * @return self
     */
    public function setError(?string $error): self
    {
        $this->error = $error;

        return $this;
    }

    /**
     * List of ID's and addresses of other managers in the swarm.
     *
     * @return PeerNode[]
     */
    public function getRemoteManagers(): ?array
    {
        return $this->remoteManagers;
    }

    /**
     * List of ID's and addresses of other managers in the swarm.
     *
     * @param PeerNode[] $remoteManagers
     *
     * @return self
     */
    public function setRemoteManagers(?array $remoteManagers): self
    {
        $this->remoteManagers = $remoteManagers;

        return $this;
    }

    /**
     * Total number of nodes in the swarm.
     *
     * @return int
     */
    public function getNodes(): ?int
    {
        return $this->nodes;
    }

    /**
     * Total number of nodes in the swarm.
     *
     * @param int $nodes
     *
     * @return self
     */
    public function setNodes(?int $nodes): self
    {
        $this->nodes = $nodes;

        return $this;
    }

    /**
     * Total number of managers in the swarm.
     *
     * @return int
     */
    public function getManagers(): ?int
    {
        return $this->managers;
    }

    /**
     * Total number of managers in the swarm.
     *
     * @param int $managers
     *
     * @return self
     */
    public function setManagers(?int $managers): self
    {
        $this->managers = $managers;

        return $this;
    }

    /**
     * ClusterInfo represents information about the swarm as is returned by the.
    "/info" endpoint. Join-tokens are not included.

     *
     * @return ClusterInfo
     */
    public function getCluster(): ?ClusterInfo
    {
        return $this->cluster;
    }

    /**
     * ClusterInfo represents information about the swarm as is returned by the.
    "/info" endpoint. Join-tokens are not included.

     *
     * @param ClusterInfo $cluster
     *
     * @return self
     */
    public function setCluster(?ClusterInfo $cluster): self
    {
        $this->cluster = $cluster;

        return $this;
    }
}
